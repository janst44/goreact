definitions:
  database.Todo:
    properties:
      completed:
        type: boolean
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      title:
        type: string
      userId:
        type: string
    type: object
  database.TodoCreate:
    properties:
      description:
        type: string
      title:
        minLength: 3
        type: string
    required:
    - title
    type: object
  database.TodoPatch:
    properties:
      completed:
        type: boolean
      description:
        type: string
      title:
        minLength: 3
        type: string
    type: object
  main.LoginRequest:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: secret123
        type: string
    type: object
  main.LoginResponse:
    properties:
      token:
        example: your.jwt.token
        type: string
    type: object
  main.RegisterRequest:
    properties:
      email:
        example: user@example.com
        type: string
      name:
        example: Jane Doe
        type: string
      password:
        example: secret123
        type: string
    type: object
info:
  contact: {}
  description: A simple Go web API for managing todos.
  title: Go Web API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT
      parameters:
      - description: User login payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/main.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.LoginResponse'
      summary: Logs in a user
      tags:
      - auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Creates a user account with email, password, and name
      parameters:
      - description: User registration payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/main.RegisterRequest'
      produces:
      - application/json
      responses: {}
      summary: Registers a new user
      tags:
      - auth
  /api/v1/todos:
    get:
      consumes:
      - application/json
      description: Get all todos for user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Todo'
            type: array
      security:
      - BearerAuth: []
      summary: Get all todos
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: Create a new todo
      parameters:
      - description: Todo object
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/database.TodoCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/database.Todo'
      security:
      - BearerAuth: []
      summary: Create a new todo
      tags:
      - todos
  /api/v1/todos/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/database.Todo'
      security:
      - BearerAuth: []
      summary: Delete a todo
      tags:
      - todos
    patch:
      consumes:
      - application/json
      description: Update a todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      - description: Todo object
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/database.TodoPatch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Todo'
      security:
      - BearerAuth: []
      summary: Update a todo
      tags:
      - todos
produces:
- application/json
schemes:
- http
securityDefinitions:
  BearerAuth:
    description: Enter your bearer token in the format "Bearer <token>".
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
